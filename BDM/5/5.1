install.packages("RMySQL")
install.packages("Hmisc")
install.packages("plyr")
install.packages("RSQLite")
library(RMySQL)
library(Hmisc)
library(plyr)
library(RSQLite)
library("DBI")
con <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(con, "mtcars", mtcars)
rs <- dbSendQuery(con, "SELECT * FROM mtcars WHERE cyl = 4;")
dbFetch(rs)
dbClearResult(rs)
summa <- dbSendQuery(con, "SELECT SUM(drat) FROM mtcars ;")
dbFetch(summa)
average <- dbSendQuery(con, "SELECT AVG(drat) FROM mtcars ;")
dbFetch(average)
count <- dbSendQuery(con, "SELECT COUNT(drat) FROM mtcars ;")
dbFetch(count)


library(devtools)
install_github(repo = "mongosoup/rmongodb")
library(rJava)
library(rmongodb)
library(dplyr)
conn_mongo  <- mongoDbConnect("flightsData")
airlines_mongo <- dbGetQuery(conn_mongo, "airlines", "",0,16)
airports_mongo <- dbGetQuery(conn_mongo, "airports", "",0,1397)
flights_mongo <- dbGetQuery(conn_mongo, "flights", "",0,336776)
planes_mongo <- dbGetQuery(conn_mongo, "planes", "",0,3322)
weather_mongo <- dbGetQuery(conn_mongo, "weather", "",0,8719)

xid<-dbGetQuery(conn_mongo, 'airports', '{"name": "Jekyll Island Airport"}')
xid$X_id
## [1] "5717f71eea7e80e167b74cee"
flights_mongo %>% 
  mutate(speed = distance / air_time) %>%
  group_by(carrier) %>%
  summarize(mean_speed = mean((distance/air_time)*60,na.rm = TRUE)) %>%
  arrange(desc(mean_speed)) %>%
  with(barplot(mean_speed,names.arg = carrier,
               main = "Average flight speed", xlab="Airline", ylab="Miles per hour"))



